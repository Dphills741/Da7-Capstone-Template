<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Worst States' inline='true' name='federated.1hm7dt70o1d07y1be1kx20ly3bpe' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Worst States' name='textscan.13i3f0d1o2j3wi15xqbb90wygr8a'>
            <connection class='textscan' directory='C:/Users/dphil/Desktop/da7/projects/Da7-Capstone-Template/Data' filename='Worst States.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.13i3f0d1o2j3wi15xqbb90wygr8a' name='Total States.csv' table='[Total States#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='YEAR' ordinal='0' />
            <column datatype='string' name='STATE' ordinal='1' />
            <column datatype='real' name='RATE' ordinal='2' />
            <column datatype='integer' name='DEATHS' ordinal='3' />
            <column datatype='string' name='URL' ordinal='4' />
            <column datatype='string' name='State' ordinal='5' />
            <column datatype='real' name='Number of Prescriptions' ordinal='6' />
            <column datatype='real' name='Perscriptions per Death' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.13i3f0d1o2j3wi15xqbb90wygr8a' name='Total States.csv' table='[Total States#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='YEAR' ordinal='0' />
              <column datatype='string' name='STATE' ordinal='1' />
              <column datatype='real' name='RATE' ordinal='2' />
              <column datatype='integer' name='DEATHS' ordinal='3' />
              <column datatype='string' name='URL' ordinal='4' />
              <column datatype='string' name='State' ordinal='5' />
              <column datatype='real' name='Number of Prescriptions' ordinal='6' />
              <column datatype='real' name='Perscriptions per Death' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.13i3f0d1o2j3wi15xqbb90wygr8a' name='Worst States.csv' table='[Worst States#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='YEAR' ordinal='0' />
              <column datatype='string' name='STATE' ordinal='1' />
              <column datatype='real' name='RATE' ordinal='2' />
              <column datatype='integer' name='DEATHS' ordinal='3' />
              <column datatype='string' name='URL' ordinal='4' />
              <column datatype='string' name='State' ordinal='5' />
              <column datatype='real' name='Number of Prescriptions' ordinal='6' />
              <column datatype='real' name='Perscriptions per Death' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[DEATHS (Worst States.csv)]' value='[Worst States.csv].[DEATHS]' />
          <map key='[DEATHS]' value='[Total States.csv].[DEATHS]' />
          <map key='[Number of Prescriptions (Worst States.csv)]' value='[Worst States.csv].[Number of Prescriptions]' />
          <map key='[Number of Prescriptions]' value='[Total States.csv].[Number of Prescriptions]' />
          <map key='[Perscriptions per Death (Worst States.csv)]' value='[Worst States.csv].[Perscriptions per Death]' />
          <map key='[Perscriptions per Death]' value='[Total States.csv].[Perscriptions per Death]' />
          <map key='[RATE (Worst States.csv)]' value='[Worst States.csv].[RATE]' />
          <map key='[RATE]' value='[Total States.csv].[RATE]' />
          <map key='[STATE (Worst States.csv)]' value='[Worst States.csv].[STATE]' />
          <map key='[STATE]' value='[Total States.csv].[STATE]' />
          <map key='[State (Worst States.csv)]' value='[Worst States.csv].[State]' />
          <map key='[State]' value='[Total States.csv].[State]' />
          <map key='[URL (Worst States.csv)]' value='[Worst States.csv].[URL]' />
          <map key='[URL]' value='[Total States.csv].[URL]' />
          <map key='[YEAR (Worst States.csv)]' value='[Worst States.csv].[YEAR]' />
          <map key='[YEAR]' value='[Total States.csv].[YEAR]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Total States.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Worst States.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[Total States.csv]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Total States.csv_3B8911F619D94094A0B416499BE628D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[Total States.csv]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Total States.csv_3B8911F619D94094A0B416499BE628D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RATE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RATE]</local-name>
            <parent-name>[Total States.csv]</parent-name>
            <remote-alias>RATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Total States.csv_3B8911F619D94094A0B416499BE628D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DEATHS]</local-name>
            <parent-name>[Total States.csv]</parent-name>
            <remote-alias>DEATHS</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Total States.csv_3B8911F619D94094A0B416499BE628D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>URL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[URL]</local-name>
            <parent-name>[Total States.csv]</parent-name>
            <remote-alias>URL</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Total States.csv_3B8911F619D94094A0B416499BE628D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Total States.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Total States.csv_3B8911F619D94094A0B416499BE628D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Prescriptions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number of Prescriptions]</local-name>
            <parent-name>[Total States.csv]</parent-name>
            <remote-alias>Number of Prescriptions</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Total States.csv_3B8911F619D94094A0B416499BE628D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perscriptions per Death</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Perscriptions per Death]</local-name>
            <parent-name>[Total States.csv]</parent-name>
            <remote-alias>Perscriptions per Death</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Total States.csv_3B8911F619D94094A0B416499BE628D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YEAR (Worst States.csv)]</local-name>
            <parent-name>[Worst States.csv]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worst States.csv_601B4EE4C80448E7BF9C8329DCBFD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE (Worst States.csv)]</local-name>
            <parent-name>[Worst States.csv]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worst States.csv_601B4EE4C80448E7BF9C8329DCBFD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RATE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RATE (Worst States.csv)]</local-name>
            <parent-name>[Worst States.csv]</parent-name>
            <remote-alias>RATE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worst States.csv_601B4EE4C80448E7BF9C8329DCBFD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DEATHS (Worst States.csv)]</local-name>
            <parent-name>[Worst States.csv]</parent-name>
            <remote-alias>DEATHS</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worst States.csv_601B4EE4C80448E7BF9C8329DCBFD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>URL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[URL (Worst States.csv)]</local-name>
            <parent-name>[Worst States.csv]</parent-name>
            <remote-alias>URL</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worst States.csv_601B4EE4C80448E7BF9C8329DCBFD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State (Worst States.csv)]</local-name>
            <parent-name>[Worst States.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worst States.csv_601B4EE4C80448E7BF9C8329DCBFD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Prescriptions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number of Prescriptions (Worst States.csv)]</local-name>
            <parent-name>[Worst States.csv]</parent-name>
            <remote-alias>Number of Prescriptions</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worst States.csv_601B4EE4C80448E7BF9C8329DCBFD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perscriptions per Death</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Perscriptions per Death (Worst States.csv)]</local-name>
            <parent-name>[Worst States.csv]</parent-name>
            <remote-alias>Perscriptions per Death</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worst States.csv_601B4EE4C80448E7BF9C8329DCBFD150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Deaths' datatype='integer' name='[DEATHS]' role='measure' type='quantitative' />
      <column caption='Rate' datatype='real' name='[RATE]' role='measure' type='quantitative' />
      <column datatype='string' name='[STATE (Worst States.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State (Worst States.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[YEAR (Worst States.csv)]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Total States.csv' datatype='table' name='[__tableau_internal_object_id__].[Total States.csv_3B8911F619D94094A0B416499BE628D5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Worst States.csv' datatype='table' name='[__tableau_internal_object_id__].[Worst States.csv_601B4EE4C80448E7BF9C8329DCBFD150]' role='measure' type='quantitative' />
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
      <column-instance column='[State (Worst States.csv)]' derivation='None' name='[none:State (Worst States.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (State (Worst States.csv),Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State (Worst States.csv):nk]' />
          <groupfilter function='level-members' level='[none:YEAR:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State1,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State:nk]' />
          <groupfilter function='level-members' level='[none:YEAR:qk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State (Worst States.csv):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:STATE:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Total States.csv' id='Total States.csv_3B8911F619D94094A0B416499BE628D5'>
            <properties context=''>
              <relation connection='textscan.13i3f0d1o2j3wi15xqbb90wygr8a' name='Total States.csv' table='[Total States#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='YEAR' ordinal='0' />
                  <column datatype='string' name='STATE' ordinal='1' />
                  <column datatype='real' name='RATE' ordinal='2' />
                  <column datatype='integer' name='DEATHS' ordinal='3' />
                  <column datatype='string' name='URL' ordinal='4' />
                  <column datatype='string' name='State' ordinal='5' />
                  <column datatype='real' name='Number of Prescriptions' ordinal='6' />
                  <column datatype='real' name='Perscriptions per Death' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Worst States.csv' id='Worst States.csv_601B4EE4C80448E7BF9C8329DCBFD150'>
            <properties context=''>
              <relation connection='textscan.13i3f0d1o2j3wi15xqbb90wygr8a' name='Worst States.csv' table='[Worst States#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='YEAR' ordinal='0' />
                  <column datatype='string' name='STATE' ordinal='1' />
                  <column datatype='real' name='RATE' ordinal='2' />
                  <column datatype='integer' name='DEATHS' ordinal='3' />
                  <column datatype='string' name='URL' ordinal='4' />
                  <column datatype='string' name='State' ordinal='5' />
                  <column datatype='real' name='Number of Prescriptions' ordinal='6' />
                  <column datatype='real' name='Perscriptions per Death' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[STATE]' />
              <expression op='[STATE (Worst States.csv)]' />
            </expression>
            <first-end-point object-id='Total States.csv_3B8911F619D94094A0B416499BE628D5' />
            <second-end-point object-id='Worst States.csv_601B4EE4C80448E7BF9C8329DCBFD150' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Best 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Best 5 States with Drug Mortality per Perscription</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Worst States' name='federated.1hm7dt70o1d07y1be1kx20ly3bpe' />
          </datasources>
          <datasource-dependencies datasource='federated.1hm7dt70o1d07y1be1kx20ly3bpe'>
            <column datatype='real' name='[Perscriptions per Death]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Perscriptions per Death]' derivation='Sum' name='[sum:Perscriptions per Death:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Perscriptions per Death])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:STATE:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:YEAR:qk]' field-type='quantitative' max='2020' min='2016' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[sum:Perscriptions per Death:qk]</rows>
        <cols>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:YEAR:qk]</cols>
      </table>
      <simple-id uuid='{30C2C59C-34AB-4220-8D99-AFF4FC096882}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A3496684-FC16-4439-81F3-0CDFD99D4806}' />
    </worksheet>
    <worksheet name='State Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Worst States' name='federated.1hm7dt70o1d07y1be1kx20ly3bpe' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hm7dt70o1d07y1be1kx20ly3bpe'>
            <column datatype='real' name='[Perscriptions per Death]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Perscriptions per Death]' derivation='Sum' name='[sum:Perscriptions per Death:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:YEAR:ok]'>
            <groupfilter function='member' level='[none:YEAR:ok]' member='2016' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:YEAR:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[Longitude (generated)]' field-type='quantitative' max='32076875.826009031' min='25845545.85937595' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[Latitude (generated)]' field-type='quantitative' max='10087425.913924754' min='643671.09883495898' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[sum:Perscriptions per Death:qk]' num-steps='10' palette='green_gold_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[sum:Perscriptions per Death:qk]' />
              <lod column='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]' />
              <geometry column='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[Latitude (generated)]</rows>
        <cols>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3E853C37-B172-453C-BDD2-250E2AC45D0D}' />
    </worksheet>
    <worksheet name='Worst 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Worst 5 States with Drug mortality per Prescription</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Worst States' name='federated.1hm7dt70o1d07y1be1kx20ly3bpe' />
          </datasources>
          <datasource-dependencies datasource='federated.1hm7dt70o1d07y1be1kx20ly3bpe'>
            <column datatype='real' name='[Perscriptions per Death]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[State (Worst States.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[State (Worst States.csv)]' derivation='None' name='[none:State (Worst States.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Perscriptions per Death]' derivation='Sum' name='[sum:Perscriptions per Death:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[Exclusions (State (Worst States.csv),Year)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:State (Worst States.csv):nk]' />
                <groupfilter function='level-members' level='[none:YEAR:qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:State (Worst States.csv):nk]' member='%null%' />
                  <groupfilter function='member' level='[none:State (Worst States.csv):nk]' member='&quot;VA&quot;' />
                </groupfilter>
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:YEAR:qk]' member='2016' />
                  <groupfilter function='member' level='[none:YEAR:qk]' member='2017' />
                  <groupfilter function='member' level='[none:YEAR:qk]' member='2018' />
                  <groupfilter function='member' level='[none:YEAR:qk]' member='2019' />
                  <groupfilter function='member' level='[none:YEAR:qk]' member='2020' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]'>
            <groupfilter count='5' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Perscriptions per Death])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:STATE:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[Exclusions (State (Worst States.csv),Year)]</column>
            <column>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:YEAR:qk]' field-type='quantitative' max='2020' min='2016' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[sum:Perscriptions per Death:qk]</rows>
        <cols>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:YEAR:qk]</cols>
      </table>
      <simple-id uuid='{244DF022-C205-4210-9392-B56C50A67EBA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Worst States' name='federated.1hm7dt70o1d07y1be1kx20ly3bpe' />
      </datasources>
      <datasource-dependencies datasource='federated.1hm7dt70o1d07y1be1kx20ly3bpe'>
        <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
        <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98288' id='13' param='horz' type-v2='layout-flow' w='49518' x='482' y='856'>
            <zone h='98288' id='7' param='horz' type-v2='layout-flow' w='49518' x='482' y='856'>
              <zone h='98288' id='5' type-v2='layout-basic' w='49518' x='482' y='856'>
                <zone h='49144' id='3' name='Worst 5' w='49518' x='482' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49144' id='9' name='Best 5' w='49518' x='482' y='856'>
                  <layout-cache minheight='198' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='98288' id='11' name='State Map' w='49518' x='50000' y='856'>
            <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='14750' id='8' name='Worst 5' pane-specification-id='0' param='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]' type-v2='color' w='14000' x='36300' y='54375' />
        <zone h='14750' id='10' name='Best 5' pane-specification-id='0' param='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]' type-v2='color' w='14000' x='35400' y='5125' />
        <zone h='18250' id='14' name='State Map' param='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:YEAR:ok]' type-v2='filter' w='16800' x='81900' y='7250' />
        <zone h='9500' id='15' name='State Map' pane-specification-id='1' param='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[sum:Perscriptions per Death:qk]' type-v2='color' w='14000' x='50500' y='7125' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98288' id='18' param='vert' type-v2='layout-flow' w='99036' x='482' y='856'>
                <zone fixed-size='280' h='49144' id='9' is-fixed='true' name='Best 5' w='49518' x='482' y='856'>
                  <layout-cache minheight='198' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14750' id='10' name='Best 5' pane-specification-id='0' param='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]' type-v2='color' w='14000' x='35400' y='5125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18250' id='14' mode='checkdropdown' name='State Map' param='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:YEAR:ok]' type-v2='filter' w='16800' x='81900' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98288' id='11' is-fixed='true' name='State Map' w='49518' x='50000' y='856'>
                  <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9500' id='15' name='State Map' pane-specification-id='1' param='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[sum:Perscriptions per Death:qk]' type-v2='color' w='14000' x='50500' y='7125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49144' id='3' is-fixed='true' name='Worst 5' w='49518' x='482' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14750' id='8' name='Worst 5' pane-specification-id='0' param='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]' type-v2='color' w='14000' x='36300' y='54375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{58396F00-D406-4EE7-AE1A-2980E1D1B27C}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Worst 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]</field>
            <field>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:State (Worst States.csv):nk]</field>
            <field>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:YEAR:qk]</field>
            <field>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[sum:Number of Prescriptions:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32A4BEF0-29E2-4712-9670-A2E9E24982C2}' />
    </window>
    <window class='worksheet' name='Best 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]</field>
            <field>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:YEAR:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38A9EDA2-58B6-46A8-9120-A3BE4D85F384}' />
    </window>
    <window class='worksheet' name='State Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:YEAR:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[sum:Perscriptions per Death:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2020</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]</field>
            <field>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:YEAR:ok]</field>
            <field>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:YEAR:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{B86B104C-AED1-4C19-8145-181B33C3F723}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8DB9CE5A-A5DF-4C5A-96E8-2D36DDF55C57}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Best 5'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='State Map'>
          <current-page>
            <multibucket>
              <bucket>2020</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Worst 5'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1hm7dt70o1d07y1be1kx20ly3bpe].[none:STATE:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{5320FAFD-00CB-4D13-9ACD-9220051F1339}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Best 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='State Map' width='192'>
      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
      Kc5q/G8yXifh2MfkagAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Worst 5' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
